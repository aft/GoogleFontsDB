name: Update Google Fonts Database

# Cem Baspinar, 2025. MIT License

on:
  schedule:
    # Run monthly on the 1st at 2 AM UTC
    - cron: '0 2 1 * *'
  
  workflow_dispatch:
    # Allow manual triggering
    inputs:
      force_rebuild:
        description: 'Force complete rebuild'
        required: false
        default: false
        type: boolean

jobs:
  update-database:
    runs-on: ubuntu-latest
    timeout-minutes: 120  # 2 hours max
    
    steps:
      - name: Checkout GoogleFontsDB repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            fonttools \
            woff2 \
            python3-pil \
            python3-cairo \
            python3-gi \
            python3-gi-cairo \
            gir1.2-pango-1.0 \
            libcairo2-dev \
            pkg-config

      - name: Install Python dependencies
        run: |
          pip install --upgrade pip
          pip install -r scripts/requirements.txt

      - name: Clone Google Fonts repository
        run: |
          echo "Cloning Google Fonts repository..."
          git clone --depth 1 https://github.com/google/fonts.git google-fonts-source
          echo "Google Fonts repo cloned successfully"
          du -sh google-fonts-source/

      - name: Generate font metadata database
        run: |
          echo "Starting font metadata extraction..."
          python scripts/generate_metadata.py
          echo "Metadata extraction completed"

      - name: Generate SVG font previews
        run: |
          echo "Starting SVG preview generation..."
          python scripts/generate_svg_previews.py
          echo "SVG preview generation completed"

      - name: Optimize and compress database
        run: |
          echo "Optimizing database..."
          python scripts/optimize_database.py
          echo "Database optimization completed"

      - name: Generate statistics
        run: |
          python scripts/generate_stats.py

      - name: Validate generated files
        run: |
          echo "Validating generated files..."
          python scripts/validate_output.py
          echo "Validation completed"

      - name: Cleanup temporary files
        run: |
          rm -rf google-fonts-source/
          rm -rf temp/
          echo "Cleanup completed"

      - name: Check for changes
        id: check_changes
        run: |
          git add .
          if git diff --staged --quiet; then
            echo "changes=false" >> $GITHUB_OUTPUT
            echo "No changes detected"
          else
            echo "changes=true" >> $GITHUB_OUTPUT
            echo "Changes detected"
          fi

      - name: Commit and push changes
        if: steps.check_changes.outputs.changes == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # Get current date for commit message
          CURRENT_DATE=$(date -u +"%Y-%m-%d")
          
          # Count fonts in database
          FONT_COUNT=$(python -c "
          import json
          with open('font-database.json', 'r') as f:
              data = json.load(f)
              print(len(data.get('fonts', {})))
          ")
          
          git commit -m "Update font database - ${CURRENT_DATE}

          - Updated font database with ${FONT_COUNT} font families
          - Generated SVG previews and metadata
          - Automated update via GitHub Actions
          
          Database version: $(date -u +"%Y.%m.%d")"
          
          git push

      - name: Create release
        if: steps.check_changes.outputs.changes == 'true'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v$(date -u +"%Y.%m.%d")
          release_name: Font Database $(date -u +"%Y.%m.%d")
          body: |
            Automated Google Fonts database update
            
            ðŸ“Š **Statistics:**
            - Total font families: ${{ steps.stats.outputs.font_count }}
            - Database size: ${{ steps.stats.outputs.db_size }}
            - Preview files: ${{ steps.stats.outputs.preview_count }}
            
            ðŸ”„ **Changes:**
            - Updated font metadata from Google Fonts repository
            - Generated compressed SVG previews
            - Optimized database structure
            
            ðŸ“… **Generated:** $(date -u +"%Y-%m-%d %H:%M:%S UTC")
          draft: false
          prerelease: false

      - name: Upload database artifacts
        if: steps.check_changes.outputs.changes == 'true'
        uses: actions/upload-artifact@v3
        with:
          name: font-database-$(date -u +"%Y%m%d")
          path: |
            font-database.json
            previews/
            stats.json
          retention-days: 30

      - name: Post-update summary
        if: always()
        run: |
          echo "=== Font Database Update Summary ==="
          echo "Status: ${{ job.status }}"
          echo "Changes detected: ${{ steps.check_changes.outputs.changes }}"
          echo "Timestamp: $(date -u)"
          
          if [ -f "stats.json" ]; then
            echo "=== Statistics ==="
            cat stats.json
          fi
          
          echo "=== File sizes ==="
          if [ -f "font-database.json" ]; then
            echo "Database: $(du -h font-database.json | cut -f1)"
          fi
          if [ -d "previews" ]; then
            echo "Previews: $(du -sh previews/ | cut -f1)"
          fi